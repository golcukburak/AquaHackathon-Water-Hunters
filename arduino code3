  
#include <Adafruit_Sensor.h> // kitaplığı dahil et
#include <DHT.h> // DHT11 için kitaplığı dahil et
#include <DHT_U.h> // DHT11 için kitaplık ekle
#define wateringTime 10000 
#define beklemeZaman 16000
#define çok Kuru 800
#define Kurutma 600
#define normal 400
# ıslak ıslak 200
#define sensorDampTo A0
# tanım sensörüDampT1 A1
# tanım sensörüDampT2 A2
#define Heat_Damp 3 // DHT11
#define DHTTYPE DHT11
#define motoru 4
int Damp; // intecer nemli
int Damp2; // intecer nemli 2
DHT dht (Isı_Damp, DHTTYPE);
uçucu int akış_frekansı; // sensör palsi
unsigned int l_hour; // litre / saat
işaretsiz karakter akış sensörü = 2; // Sensör girişi
imzasız uzun currentTime;
imzasız uzun cloopTime;
void flow () // Kesinti
{
flow_frequency ++;
}
void setup () {
  // sensör giriş ayarları
 pinMode (akış sensörü, INPUT);
 digitalWrite (akış sensörü, YÜKSEK);
 Serial.begin (9600);
 // Kesinti ayarı
 attachInterrupt (0, akış, RISING);
sei (); // keser açık
 currentTime = millis ();
 cloopTime = currentTime;
pinMode (motor, ÇIKIŞ); // Motoru çıkışa ayarlama
 pinMode (sensorDampTo, INPUT); // Nemli sensörü girişe ayarlama
 pinMode (sensorDampT1, INPUT); // Nemli sensörü girişe ayarlama
 dht.begin ();
}
void loop () {
  Şamandıralı Nem = dht.readHumidity ();
  şamandıra sıcaklığı = dht.readTemperature ();
    if (isnan (Nem) || isnan (Sıcaklık)) {
    Serial.println (F ("DHT sensöründen okunamadı!"));
    dönüş;
  }
  Seri.print (F ("Nem:"));
  Serial.print (nem);
  Seri.print (F ("% Sıcaklık:"));
  Serial.println (sıcaklık);
  ise (Nem> 60) {
    digitalWrite (motor, LOW); // motor kapalı
    gecikme (10000); // 10 saniye bekleyin
    break;
  }
    sırasında (ısı> 35) {
      Eğer (nem <40) {
        digitalWrite (motor, HIGH); // motor açık
        delay (wateringTime); // 10 saniye bekleyin
        digitalWrite (motor, LOW); // motor kapalı
        delay (waitTime); // 16 saniye bekleyin
        break;
      }
      Başka{
         Damp2 = analogRead (sensorDampT1); // İnsanlık sensörünü okuyun ve nem sensörüne eşit olacak
          Serial.print ("Damp2:");
          Serial.println (Damp2); // Seri ekrana veri yazma 
           Eğer (Damp2> veryDry) { 
           digitalWrite (motor, HIGH); // motor açık
           gecikme (wateringTime + 3000); // 13 saniye bekleyin
           digitalWrite (motor, LOW); // motor kapalı
           delay (waitTime-10000); // 6 saniye bekleyin
           }
           else if (Damp2> Kuru) {
           digitalWrite (motor, HIGH); // motor açık
           delay (wateringTime); // 10 saniye bekleyin
           digitalWrite (motor, LOW); // motor kapalı
           delay (waitTime-6000); // 10 saniye bekleyin
           }
           else if (Damp2> normal) {
           digitalWrite (motor, HIGH); // motor açık
           delay (wateringTime-3000); // 7 saniye bekleyin
           digitalWrite (motor, LOW); // motor kapalı
           delay (waitTime); // 16 saniye bekleyin
           }
           else if (Nemli> ıslak) {
           digitalWrite (motor, HIGH); // motor açık
           gecikme (wateringTime-4000); // 6 saniye bekleyin
           digitalWrite (motor, LOW); // motor kapalı
           delay (waitTime + 16000); // 32 saniye bekleyin
           }
        break;
      }
      
    }
    sırasında (ısı <0) {
      Eğer (Nem> = 45) {
          digitalWrite (motor, LOW); // motor kapalı
          gecikme (10000); // 10 saniye bekleyin
          break;
      }
      Başka{
        digitalWrite (motor, HIGH); // motor açık
        gecikme (wateringTime-4000); // 6 saniye bekleyin
        digitalWrite (motor, LOW); // motor kapalı
        delay (waitTime); // 16 saniye bekleyin
      }
    }
  Damp = analogRead (sensorDampTo); // İnsanlık sensörünü okuyun ve nem sensörüne eşit olacak
  Serial.print ("Nemli:");
  Serial.println (Damp); // Seri ekrana veri yazma 
  Eğer (> veryDry Damp) { 
    digitalWrite (motor, HIGH); // motor açık
    gecikme (wateringTime + 3000); // 13 saniye bekleyin
    digitalWrite (motor, LOW); // motor kapalı
    delay (waitTime-10000); // 6 saniye bekleyin
        currentTime = millis ();
        // saniyede geçen pals sayısı ekranındap litre - saat hesabı kullanıyor
       if (currentTime> = (cloopTime + 1000))
       {
       cloopTime = currentTime; // saniyeyi güncelle
       l_saat = (akış_frekansı * 60 / 7.5); // litre hesabı frekans * 60 / 7.5
       akış_frekansı = 0; // sayıcıyı sıfırla
       Seri.print (l_saat, DEC); // sonucu seri içindir göster
       Serial.println ("L / saat");
       } 
  }
  else if (Nemli> Kuru) {
        digitalWrite (motor, HIGH); // motor açık
        delay (wateringTime); // 10 saniye bekleyin
        digitalWrite (motor, LOW); // motor kapalı
        delay (waitTime-6000); // 10 saniye bekleyin
  }
    else if (Nemli> normal) {
        digitalWrite (motor, HIGH); // motor açık
        delay (wateringTime-3000); // 7 saniye bekleyin
        digitalWrite (motor, LOW); // motor kapalı
        delay (waitTime); // 16 saniye bekleyin
  }
      else if (Nemli> ıslak) {
        digitalWrite (motor, HIGH); // motor açık
        gecikme (wateringTime-4000); // 6 saniye bekleyin
        digitalWrite (motor, LOW); // motor kapalı
        delay (waitTime + 16000); // 32 saniye bekleyin
  }
}
